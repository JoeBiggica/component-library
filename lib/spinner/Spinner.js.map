{"version":3,"sources":["../../components/spinner/Spinner.jsx"],"names":["React","PureComponent","PropTypes","classnames","debounce","CSSTransition","TextLabel","Color","WHITE","ORANGE","Spinner","props","state","show","transition_in","wait","deferred_show","setState","prev_props","cancel","className","text_className","style","text_style","color","text","appear","styles","appearActive","enter","enterActive","enterDone","exit","exitActive","exitDone","Font","REGULAR","GRAY","bool","string","object","oneOf","Object","values"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport TextLabel from 'components/textlabel';\n\nimport styles from './Spinner.scss';\n\nconst Color = {\n\tWHITE: 'white',\n\tORANGE: 'orange',\n};\n\nexport default class Spinner extends PureComponent {\n\n\tstatic propTypes = {\n\t\tshow: PropTypes.bool,\n\t\tclassName: PropTypes.string,\n\t\ttext_className: PropTypes.string,\n\t\tstyle: PropTypes.object,\n\t\ttext_style: PropTypes.object,\n\t\tcolor: PropTypes.oneOf(Object.values(Color)),\n\t\ttext: PropTypes.string,\n\t}\n\n\tstatic defaultProps = {\n\t\tshow: true,\n\t\tcolor: Color.ORANGE,\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\tif (!props.show) {\n\t\t\treturn {\n\t\t\t\ttransition_in: false,\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tstatic Color = Color;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\ttransition_in: false,\n\t\t};\n\n\t\tconst wait = 100;\n\n\t\tthis.deferred_show = debounce(() => {\n\t\t\tthis.setState({\n\t\t\t\ttransition_in: true,\n\t\t\t});\n\t\t}, wait);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.show) {\n\t\t\tthis.deferred_show();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prev_props) {\n\t\tif (prev_props.show !== this.props.show) {\n\t\t\tif (this.props.show) {\n\t\t\t\tthis.deferred_show();\n\t\t\t} else {\n\t\t\t\tthis.deferred_show.cancel();\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.deferred_show.cancel();\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclassName,\n\t\t\ttext_className,\n\t\t\tstyle,\n\t\t\ttext_style,\n\t\t\tcolor,\n\t\t\ttext,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<CSSTransition\n\t\t\t\ttimeout={500}\n\t\t\t\tin={this.state.transition_in}\n\t\t\t\tmountOnEnter\n\t\t\t\tunmountOnExit\n\t\t\t\tclassNames={{\n\t\t\t\t\tappear: styles['appear'],\n\t\t\t\t\tappearActive: styles['appear-active'],\n\t\t\t\t\tenter: styles['enter'],\n\t\t\t\t\tenterActive: styles['enter-active'],\n\t\t\t\t\tenterDone: styles['enter-done'],\n\t\t\t\t\texit: styles['exit'],\n\t\t\t\t\texitActive: styles['exit-active'],\n\t\t\t\t\texitDone: styles['exit-done'],\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classnames(styles['container'], className)}\n\t\t\t\t\tstyle={style}\n\t\t\t\t>\n\t\t\t\t\t<div className={styles['icon-container']}>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tclassName={classnames(styles['icon'], styles[color])}\n\t\t\t\t\t\t\tpreserveAspectRatio='xMidYMid'\n\t\t\t\t\t\t\tviewBox='0 0 100 100'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<circle cx='50' cy='50' r='40' />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t\t{text && \n\t\t\t\t\t\t<TextLabel\n\t\t\t\t\t\t\tclassName={classnames(styles['text'], text_className)}\n\t\t\t\t\t\t\tstyle={text_style}\n\t\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\t\tfont={TextLabel.Font.REGULAR}\n\t\t\t\t\t\t\tcolor={color === Color.WHITE ? TextLabel.Color.WHITE : TextLabel.Color.GRAY}\n\t\t\t\t\t\t\ttag='span'\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</CSSTransition>\n\t\t);\n\t}\n}\n"],"file":"Spinner.js"}