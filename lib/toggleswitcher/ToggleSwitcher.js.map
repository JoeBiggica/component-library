{"version":3,"sources":["../../components/toggleswitcher/ToggleSwitcher.jsx"],"names":["React","PureComponent","createContext","PropTypes","context","active","onToggle","Provider","Consumer","ToggleButton","component","className","children","hide_on_toggle","handleClickOnChild","Comp","handleClick","event","propTypes","oneOfType","string","func","node","bool","defaultProps","ToggleResponderComponent","props","e","container","container_ref","current","contains","target","key","createRef","toggle_click_outside","document","addEventListener","handleClickOutside","handleKeyDown","prev_props","prev_state","removeEventListener","isRequired","ToggleResponder","ToggleSwitcher","setState","state","handleToggle"],"mappings":"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","sourcesContent":["import React, { PureComponent, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nconst context = createContext({\n\tactive: false,\n\tonToggle: () => {},\n});\n\nconst { Provider, Consumer } = context;\n\nconst ToggleButton = ({\n\tcomponent,\n\tclassName,\n\tchildren,\n\thide_on_toggle,\n\thandleClickOnChild\n}) => (\n\t<Consumer>\n\t\t{({ active, onToggle }) => {\n\t\t\tif (active && hide_on_toggle) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst Comp = component;\n\n\t\t\t/**\n\t\t\t * Intercept toggle function and fire custom event comming from an\n\t\t\t * React component\n\t\t\t * @typedef {object} ClickEvent\n\t\t\t * @param {ClickEvent} event\n\t\t\t */\n\t\t\tconst handleClick = event => {\n\t\t\t\tif (typeof Comp === 'function' && handleClickOnChild) {\n\t\t\t\t\thandleClickOnChild(event);\n\t\t\t\t}\n\t\t\t\tonToggle(!active);\n\t\t\t};\n\n\t\t\treturn (\n\t\t\t\t<Comp className={className} onClick={handleClick}>\n\t\t\t\t\t{children}\n\t\t\t\t</Comp>\n\t\t\t);\n\t\t}}\n\t</Consumer>\n);\n\nToggleButton.propTypes = {\n\tcomponent: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\tclassName: PropTypes.string,\n\tchildren: PropTypes.node,\n\thide_on_toggle: PropTypes.bool,\n\thandleClickOnChild: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n};\n\nToggleButton.defaultProps = {\n\tcomponent: 'button',\n\thide_on_toggle: false,\n\thandleClickOnChild: false\n};\n\n\nclass ToggleResponderComponent extends PureComponent {\n\tstatic propTypes = {\n\t\tactive: PropTypes.bool.isRequired,\n\t\tonToggle: PropTypes.func.isRequired,\n\t\tclassName: PropTypes.string,\n\t\tchildren: PropTypes.node,\n\t\ttoggle_click_outside: PropTypes.bool,\n\t}\n\n\tstatic defaultProps = {\n\t\ttoggle_click_outside: false,\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.container_ref = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.active) {\n\t\t\tif (this.props.toggle_click_outside) {\n\t\t\t\tdocument.addEventListener('mousedown', this.handleClickOutside);\n\t\t\t}\n\n\t\t\tdocument.addEventListener('keydown', this.handleKeyDown);\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prev_props, prev_state) {\n\t\tif (this.props.active !== prev_props.active) {\n\t\t\tif (this.props.toggle_click_outside) {\n\t\t\t\tif (this.props.active) {\n\t\t\t\t\tdocument.addEventListener('mousedown', this.handleClickOutside);\n\t\t\t\t} else {\n\t\t\t\t\tdocument.removeEventListener('mousedown', this.handleClickOutside);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.props.active) {\n\t\t\t\tdocument.addEventListener('keydown', this.handleKeyDown);\n\t\t\t} else {\n\t\t\t\tdocument.removeEventListener('keydown', this.handleKeyDown);\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('mousedown', this.handleClickOutside);\n\t\tdocument.removeEventListener('keydown', this.handleKeyDown);\n\t}\n\n\thandleClickOutside = e => {\n\t\tconst container = this.container_ref.current;\n\n\t\tif (container && !container.contains(e.target)) {\n\t\t\tthis.props.onToggle(false);\n\t\t}\n\t}\n\n\thandleKeyDown = e => {\n\t\tif (e.key === 'Escape') {\n\t\t\tthis.props.onToggle(false);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tref={this.container_ref}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst ToggleResponder = ({ children, className, toggle_click_outside }) => (\n\t<Consumer>\n\t\t{({ active, onToggle }) => (active ? (\n\t\t\t<ToggleResponderComponent\n\t\t\t\tclassName={className}\n\t\t\t\ttoggle_click_outside={toggle_click_outside}\n\t\t\t\tactive={active}\n\t\t\t\tonToggle={onToggle}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</ToggleResponderComponent>\n\t\t) : null)}\n\t</Consumer>\n);\n\nToggleResponder.propTypes = {\n\tclassName: PropTypes.string,\n\tchildren: PropTypes.node,\n\ttoggle_click_outside: PropTypes.bool,\n};\n\n\nclass ToggleSwitcher extends PureComponent {\n\tstatic propTypes = {\n\t\tchildren: PropTypes.node,\n\t\tonToggle: PropTypes.func,\n\t}\n\n\tstatic defaultProps = {\n\t\tonToggle: () => {},\n\t}\n\n\tstate = {\n\t\tactive: false,\n\t};\n\n\thandleToggle = active => {\n\t\tthis.setState({\n\t\t\tactive,\n\t\t});\n\n\t\tthis.props.onToggle(active);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tactive: this.state.active,\n\t\t\t\t\tonToggle: this.handleToggle,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default ToggleSwitcher;\nexport { ToggleButton, ToggleResponder };\n"],"file":"ToggleSwitcher.js"}