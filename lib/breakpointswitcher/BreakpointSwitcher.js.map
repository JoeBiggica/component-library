{"version":3,"sources":["../../components/breakpointswitcher/BreakpointSwitcher.jsx"],"names":["React","Component","createContext","PropTypes","isString","isArray","BreakpointDetector","context","breakpoints","Provider","Consumer","BreakpointToggle","include","exclude","default_render","children","length","included","indexOf","filter","bp","excluded","propTypes","oneOfType","string","arrayOf","bool","node","defaultProps","BreakpointSwitcher","setState","state","props","debug","handleBreakpointChange"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash/isString';\nimport isArray from 'lodash/isArray';\nimport BreakpointDetector from 'components/breakpointdetector';\n\nconst context = createContext({\n\tbreakpoints: [],\n});\n\nconst { Provider, Consumer } = context;\n\n\nconst BreakpointToggle = ({ include, exclude, default_render, children }) => (\n\t<Consumer>\n\t\t{({ breakpoints }) => {\n\t\t\tif (!breakpoints.length && default_render) {\n\t\t\t\treturn children;\n\t\t\t}\n\n\t\t\tlet included;\n\n\t\t\t// test inclusions\n\t\t\tif (isString(include)) {\n\t\t\t\tincluded = breakpoints.indexOf(include) > -1;\n\t\t\t} else if (isArray(include)) {\n\t\t\t\tincluded = include.filter(bp => breakpoints.indexOf(bp) > -1).length > 0;\n\t\t\t}\n\n\t\t\t// if included, test exclusions\n\t\t\tif (included) {\n\t\t\t\tlet excluded;\n\n\t\t\t\tif (isString(exclude)) {\n\t\t\t\t\texcluded = breakpoints.indexOf(exclude) > -1;\n\t\t\t\t} else if (isArray(exclude)) {\n\t\t\t\t\texcluded = exclude.filter(bp => breakpoints.indexOf(bp) > -1).length > 0;\n\t\t\t\t}\n\n\t\t\t\tif (excluded) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn included ? children : null;\n\t\t}}\n\t</Consumer>\n);\n\nBreakpointToggle.propTypes = {\n\tinclude: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.arrayOf(PropTypes.string),\n\t]),\n\texclude: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.arrayOf(PropTypes.string),\n\t]),\n\tdefault_render: PropTypes.bool,\n\tchildren: PropTypes.node,\n};\n\nBreakpointToggle.defaultProps = {\n\tinclude: [\n\t\t'for-phone-only',\n\t\t'for-tablet-portrait-up',\n\t\t'for-tablet-landscape-up',\n\t\t'for-desktop-up',\n\t\t'for-wide-desktop-up',\n\t],\n\texclude: [],\n\tdefault_render: false,\n};\n\n\nclass BreakpointSwitcher extends Component {\n\tstatic propTypes = {\n\t\tdebug: PropTypes.bool,\n\t\tchildren: PropTypes.node,\n\t}\n\n\tstate = {\n\t\tbreakpoints: [],\n\t};\n\n\thandleBreakpointChange = breakpoints => {\n\t\tthis.setState({\n\t\t\tbreakpoints,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tbreakpoints: this.state.breakpoints,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t\t<BreakpointDetector\n\t\t\t\t\t\tdebug={this.props.debug}\n\t\t\t\t\t\tonChange={this.handleBreakpointChange}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default BreakpointSwitcher;\nexport { BreakpointToggle };\n"],"file":"BreakpointSwitcher.js"}