{"version":3,"sources":["../../components/duration/Duration.jsx"],"names":["React","PropTypes","classnames","omit","TextLabel","formatTime","time","show_hours","sec","parseInt","hours","Math","floor","minutes","seconds","join","Duration","props","formatted_duration","text_label_props","propTypes","number","defaultProps","Font","Color"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,UAA1B,EAAsC;AACrC,MAAIC,GAAG,GAAGC,QAAQ,CAACH,IAAD,EAAO,EAAP,CAAlB;AACG,MAAII,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,IAAjB,CAAZ;AACA,MAAIK,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAIE,KAAK,GAAG,IAAhB,IAAyB,EAApC,CAAd;AACA,MAAII,OAAO,GAAGN,GAAG,GAAIE,KAAK,GAAG,IAAf,GAAwBG,OAAO,GAAG,EAAhD;;AAEA,MAAIH,KAAK,GAAG,EAAZ,EAAgB;AACfA,IAAAA,KAAK,GAAG,MAAMA,KAAd;AACA;;AAED,MAAIG,OAAO,GAAG,EAAd,EAAkB;AACjBA,IAAAA,OAAO,GAAG,MAAMA,OAAhB;AACA;;AAED,MAAIC,OAAO,GAAG,EAAd,EAAkB;AACjBA,IAAAA,OAAO,GAAG,MAAMA,OAAhB;AACA;;AAED,MAAIP,UAAJ,EAAgB;AACf,WAAO,CAACG,KAAD,EAAQG,OAAR,EAAiBC,OAAjB,EAA0BC,IAA1B,CAA+B,GAA/B,CAAP;AACA;;AAED,SAAO,CAACF,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,CAAwB,GAAxB,CAAP;AACH;;AAED,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,MAAMH,OAAO,GAAGG,KAAK,CAACH,OAAtB;AACA,MAAMP,UAAU,GAAGO,OAAO,GAAG,IAAV,IAAkB,CAArC;AACA,MAAMI,kBAAkB,GAAGb,UAAU,CAACS,OAAD,EAAUP,UAAV,CAArC;AAEA,MAAMY,gBAAgB,GAAGhB,IAAI,CAACc,KAAD,EAAQ,CAAC,SAAD,CAAR,CAA7B;AAEA,SACC,oBAAC,SAAD,eACKE,gBADL;AAEC,IAAA,IAAI,EAAED;AAFP,KADD;AAMA;;AAEDF,QAAQ,CAACI,SAAT,sBACIhB,SAAS,CAACgB,SADd;AAECN,EAAAA,OAAO,EAAEb,SAAS,CAACoB;AAFpB;AAKAL,QAAQ,CAACM,YAAT,GAAwB;AACvBR,EAAAA,OAAO,EAAE;AADc,CAAxB;AAIAE,QAAQ,CAACO,IAAT,GAAgBnB,SAAS,CAACmB,IAA1B;AAEAP,QAAQ,CAACQ,KAAT,GAAiBpB,SAAS,CAACoB,KAA3B;AAEA,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport omit from 'lodash/omit';\nimport TextLabel from 'components/textlabel';\n\nfunction formatTime(time, show_hours) {\n\tlet sec = parseInt(time, 10);\n    let hours = Math.floor(sec / 3600);\n    let minutes = Math.floor((sec - (hours * 3600)) / 60);\n    let seconds = sec - (hours * 3600) - (minutes * 60);\n\n    if (hours < 10) {\n    \thours = '0' + hours;\n    }\n\n    if (minutes < 10) {\n    \tminutes = '0' + minutes;\n    }\n\n    if (seconds < 10) {\n    \tseconds = '0' + seconds;\n    }\n\n    if (show_hours) {\n    \treturn [hours, minutes, seconds].join(':');\n    }\n\n    return [minutes, seconds].join(':');\n}\n\nfunction Duration(props) {\n\tconst seconds = props.seconds;\n\tconst show_hours = seconds / 3600 >= 1;\n\tconst formatted_duration = formatTime(seconds, show_hours);\n\n\tconst text_label_props = omit(props, ['seconds']);\n\n\treturn (\n\t\t<TextLabel\n\t\t\t{...text_label_props}\n\t\t\ttext={formatted_duration}\n\t\t/>\n\t);\n}\n\nDuration.propTypes = {\n\t...TextLabel.propTypes,\n\tseconds: PropTypes.number,\n};\n\nDuration.defaultProps = {\n\tseconds: 0,\n};\n\nDuration.Font = TextLabel.Font;\n\nDuration.Color = TextLabel.Color;\n\nexport default Duration;\n"],"file":"Duration.js"}